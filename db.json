{
  "cities": [
    {
      "cityName": "Les Valls de Valira",
      "country": "Andorra",
      "emoji": "ðŸ‡¦ðŸ‡©",
      "date": "2023-12-12T01:26:03.359Z",
      "notes": "",
      "position": {
        "lat": "42.45588764197166",
        "lng": "1.56005859375"
      },
      "id": 98443205
    },
    {
      "cityName": "Lumbier",
      "country": "Spain",
      "emoji": "ðŸ‡ªðŸ‡¸",
      "date": "2023-12-12T01:35:22.053Z",
      "notes": "",
      "position": {
        "lat": "42.65012181368025",
        "lng": "-1.2744140625000002"
      },
      "id": 98443207
    },
    {
      "cityName": "A Peroxa",
      "country": "Spain",
      "emoji": "ðŸ‡ªðŸ‡¸",
      "date": "2023-12-12T11:26:27.549Z",
      "notes": "",
      "position": {
        "lat": "42.439674178149446",
        "lng": "-7.844238281250001"
      },
      "id": 98443210
    },
    {
      "cityName": "Bordj Badji Mokhtar",
      "country": "Algeria",
      "emoji": "ðŸ‡©ðŸ‡¿",
      "date": "2023-12-12T11:33:33.149Z",
      "notes": "",
      "position": {
        "lat": "24.906367237907997",
        "lng": "-3.4277343750000004"
      },
      "id": 98443211
    },
    {
      "cityName": "Enguidanos",
      "country": "Spain",
      "emoji": "ðŸ‡ªðŸ‡¸",
      "date": "2023-12-12T11:53:42.601Z",
      "notes": "",
      "position": {
        "lat": "39.690280594818034",
        "lng": "-1.6259765625"
      },
      "id": 98443213
    },
    {
      "cityName": "Montijo",
      "country": "Portugal",
      "emoji": "ðŸ‡µðŸ‡¹",
      "date": "2023-12-12T15:36:34.563Z",
      "notes": "",
      "position": {
        "lat": "38.51541123094829",
        "lng": "-9.450421874999993"
      },
      "id": 98443215
    },
    {
      "cityName": "Magnac-Laval",
      "country": "France",
      "emoji": "ðŸ‡«ðŸ‡·",
      "date": "2023-12-13T14:59:37.165Z",
      "notes": "",
      "position": {
        "lat": "46.22545288226939",
        "lng": "1.2084960937500002"
      },
      "id": 98443217
    },
    {
      "cityName": "Saligny-sur-Roudon",
      "country": "France",
      "emoji": "ðŸ‡«ðŸ‡·",
      "date": "2023-12-13T15:00:30.597Z",
      "notes": "",
      "position": {
        "lat": "46.437856895024204",
        "lng": "3.7792968750000004"
      },
      "id": 98443218
    },
    {
      "cityName": "Varades",
      "country": "France",
      "emoji": "ðŸ‡«ðŸ‡·",
      "date": "2023-12-13T15:01:12.601Z",
      "notes": "teste",
      "position": {
        "lat": "47.45780853075031",
        "lng": "-0.9667968750000001"
      },
      "id": 98443219
    },
    {
      "cityName": "Champigny-sur-Marne",
      "country": "France",
      "emoji": "ðŸ‡«ðŸ‡·",
      "date": "2023-12-13T15:40:17.203Z",
      "notes": "",
      "position": {
        "lat": "48.821332549646655",
        "lng": "2.5488281250000004"
      },
      "id": 98443220
    },
    {
      "cityName": "Tollaincourt",
      "country": "France",
      "emoji": "ðŸ‡«ðŸ‡·",
      "date": "2023-12-13T15:49:06.720Z",
      "notes": "",
      "position": {
        "lat": "48.09275716032736",
        "lng": "5.690917968750001"
      },
      "id": 98443221
    },
    {
      "cityName": "Nasbinals",
      "country": "France",
      "emoji": "ðŸ‡«ðŸ‡·",
      "date": "2023-12-13T15:50:13.384Z",
      "notes": "",
      "position": {
        "lat": "44.60611274517393",
        "lng": "3.0541992187500004"
      },
      "id": 98443222
    },
    {
      "cityName": "Cabezas del Pozo",
      "country": "Spain",
      "emoji": "ðŸ‡ªðŸ‡¸",
      "date": "2023-12-13T17:08:48.471Z",
      "notes": "",
      "position": {
        "lat": "41.0130657870063",
        "lng": "-4.965820312500001"
      },
      "id": 98443223
    }
  ],
  "questions": [
    {
      "question": "Which is the most popular JavaScript framework?",
      "options": ["Angular", "React", "Svelte", "Vue"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which company invented React?",
      "options": ["Google", "Apple", "Netflix", "Facebook"],
      "correctOption": 3,
      "points": 10
    },
    {
      "question": "What's the fundamental building block of React apps?",
      "options": ["Components", "Blocks", "Elements", "Effects"],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "What's the name of the syntax we use to describe the UI in React components?",
      "options": ["FBJ", "Babel", "JSX", "ES2015"],
      "correctOption": 2,
      "points": 10
    },
    {
      "question": "How does data flow naturally in React apps?",
      "options": [
        "From parents to children",
        "From children to parents",
        "Both ways",
        "The developers decides"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "How to pass data into a child component?",
      "options": ["State", "Props", "PropTypes", "Parameters"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "When to use derived state?",
      "options": [
        "Whenever the state should not trigger a re-render",
        "Whenever the state can be synchronized with an effect",
        "Whenever the state should be accessible to all components",
        "Whenever the state can be computed from another state variable"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "What triggers a UI re-render in React?",
      "options": [
        "Running an effect",
        "Passing props",
        "Updating state",
        "Adding event listeners to DOM elements"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "When do we directly \"touch\" the DOM in React?",
      "options": [
        "When we need to listen to an event",
        "When we need to change the UI",
        "When we need to add styles",
        "Almost never"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "In what situation do we use a callback to update state?",
      "options": [
        "When updating the state will be slow",
        "When the updated state is very data-intensive",
        "When the state update should happen faster",
        "When the new state depends on the previous state"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "If we pass a function to useState, when will that function be called?",
      "options": [
        "On each re-render",
        "Each time we update the state",
        "Only on the initial render",
        "The first time we update the state"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Which hook to use for an API request on the component's initial render?",
      "options": ["useState", "useEffect", "useRef", "useReducer"],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which variables should go into the useEffect dependency array?",
      "options": [
        "Usually none",
        "All our state variables",
        "All state and props referenced in the effect",
        "All variables needed for clean up"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "An effect will always run on the initial render.",
      "options": [
        "True",
        "It depends on the dependency array",
        "False",
        "In depends on the code in the effect"
      ],
      "correctOption": 0,
      "points": 30
    },
    {
      "question": "When will an effect run if it doesn't have a dependency array?",
      "options": [
        "Only when the component mounts",
        "Only when the component unmounts",
        "The first time the component re-renders",
        "Each time the component is re-rendered"
      ],
      "correctOption": 3,
      "points": 20
    }
  ]
}
